tags:
  - name: rennie
    description: Example API
/rennie/field:
  get:
    tags:
      - rennie
    produces:
      - "text/html; charset=utf-8"

    responses:
      200:
        description: "success"
        schema:
          type: "string"
          example: "text"


//無限スイーパーからのコピー
/piece:
  post:
    x-swagger-router-controller: test
    operationId: test_post
    security:
    - tokenAuth: []
    tags:
      - piece
    summary: "set a piece on board"
    description: |
      - status
        - コマが置けたかtrue, falaseで返す
      - 以下、boardと同じくすべての盤面情報を返す
    parameters:
      - $ref: "#/definitions/Piece/properties/x"
      - $ref: "#/definitions/Piece/properties/y"
    responses:
      200:
        description: "show specified board size"
        schema:
          type: "object"
          properties:
            status:
              $ref: "#/definitions/Status"
            piece:
              $ref: "#/definitions/Piece"
      401:
        description: "Unauthorized"
         delete:
    x-swagger-router-controller: test
    operationId: test_post
    security:
    - tokenAuth: []
    tags:
      - piece
    summary: "delete a piece or all pieces"
    parameters:
      # - name: "pieces"
      #   description: "Add items to be deleted"
      #   in: "body"
      #   schema:
      #     $ref: "#/definitions/Positions"
      - name: "keyword"
        in: "query"
        description: "Please enter keyword if you want to delete all pieces."
        required: false
        type: "string"
    responses:
      200:
        description: "return delete status and board condition"
        schema:
          type: "object"
          properties:
            status:
              $ref: "#/definitions/Status"


  Piece:
    type: object
    description: "piece condition"
    properties:
      x:
        name: "x"
        type: number
        description: "x position"
        example: 1
        in: "formData"
        required: true
      y:
        name: "y"
        type: number
        description: "y position"
        example: 1
        in: "formData"
        required: true
      userId:
        name: userId
        in: "query"
        description: "userId"
        type: number
        example: 1
        required: true
  Positions:
    type: array
    description: "just show piece locations (not include userId information)"
    items:
      $ref: "#/definitions/Position"
  Position:
    type: "object"
    description: "just show piece location (not include userId information)"
    properties:
      x:
        name: "x"
        type: "number"
        example: 1
        in: "formData"
      y:
        name: "y"
        type: "number"
        example: 1
        in: "formData"
//ここまでコピー
